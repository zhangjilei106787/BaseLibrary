apply plugin: 'com.android.library'
android {
    compileSdkVersion rootProject.ext.android["compileSdkVersion"]
    buildToolsVersion rootProject.ext.android["buildToolsVersion"]
    defaultConfig {
        minSdkVersion rootProject.ext.android["minSdkVersion"]
        targetSdkVersion rootProject.ext.android["targetSdkVersion"]
        versionCode rootProject.ext.android["versionCode"]
        versionName rootProject.ext.android["versionName"]

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    buildscript {
        repositories {
            jcenter()
        }
    }
    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
    }

}

dependencies {
    //support
    api(rootProject.ext.dependencies["support-v4"]) {
        exclude module: 'support-annotations'
    }
    api(rootProject.ext.dependencies["appcompat-v7"]) {
        exclude module: 'support-annotations'
        exclude module: 'support-v4'
    }
    api(rootProject.ext.dependencies["design"]) {
        exclude module: 'support-annotations'
        exclude module: 'appcompat-v7'
        exclude module: 'support-v4'
    }
    api rootProject.ext.dependencies["annotations"]
    //network
    api rootProject.ext.dependencies["retrofit"]
    //rxjava2
    api rootProject.ext.dependencies["rxjava2"]
    api rootProject.ext.dependencies["rxandroid2"]
    //glide
    api rootProject.ext.dependencies["glide"]
    annotationProcessor rootProject.ext.dependencies["glide-compiler"]
   //gson
    api rootProject.ext.dependencies["gson"]
    //tools
    api rootProject.ext.dependencies["butterknife"]
    api rootProject.ext.dependencies["androideventbus"]
    api(rootProject.ext.dependencies["fragmention"]) {
        exclude module: 'support-v4'
    }
    api rootProject.ext.dependencies["avloading"]
    api rootProject.ext.dependencies["zxing"]
    //绑定rxjava2生命周期
    api rootProject.ext.dependencies["rxlifecycle2"]
    api rootProject.ext.dependencies["rxlifecycle2-android"]
    api rootProject.ext.dependencies["rxlifecycle2-components"]
    //gson转换
    api rootProject.ext.dependencies["retrofit-converter-gson"]
    //rx适配器
    api rootProject.ext.dependencies["retrofit-adapter-rxjava2"]
    //状态栏
    api rootProject.ext.dependencies["barlibrary"]
    // android 架构组件
    def lifecycle_version = "1.1.1"

// ViewModel and LiveData
    api "android.arch.lifecycle:extensions:$lifecycle_version"

// alternatively - just ViewModel
    api "android.arch.lifecycle:viewmodel:$lifecycle_version"

// use -ktx for Kotlin

// alternatively - just LiveData
    api "android.arch.lifecycle:livedata:$lifecycle_version"

// alternatively - Lifecycles only (no ViewModel or LiveData).

//     Support library depends on this lightweight import
    api "android.arch.lifecycle:runtime:$lifecycle_version"

// alternately - if using Java8, use the following instead of compiler
    api "android.arch.lifecycle:common-java8:$lifecycle_version"

// optional - ReactiveStreams support for LiveData
    api "android.arch.lifecycle:reactivestreams:$lifecycle_version"
    //对Rxjava支持
    api "android.arch.persistence.room:rxjava2:1.0.0"
    // Room
    api "android.arch.persistence.room:runtime:$lifecycle_version"

}
